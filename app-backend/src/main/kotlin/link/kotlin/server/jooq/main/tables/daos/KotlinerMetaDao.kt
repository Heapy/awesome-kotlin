/*
 * This file is generated by jOOQ.
 */
package link.kotlin.server.jooq.main.tables.daos


import kotlin.collections.List

import link.kotlin.server.jooq.main.tables.KotlinerMeta
import link.kotlin.server.jooq.main.tables.records.KotlinerMetaRecord

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class KotlinerMetaDao(configuration: Configuration?) : DAOImpl<KotlinerMetaRecord, link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta, Long>(KotlinerMeta.KOTLINER_META, link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta::class.java, configuration) {

    /**
     * Create a new KotlinerMetaDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta): Long? = o.id

    /**
     * Fetch records that have <code>kotliner_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfKotlinerId(lowerInclusive: Long?, upperInclusive: Long?): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetchRange(KotlinerMeta.KOTLINER_META.KOTLINER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>kotliner_id IN (values)</code>
     */
    fun fetchByKotlinerId(vararg values: Long): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetch(KotlinerMeta.KOTLINER_META.KOTLINER_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Long?, upperInclusive: Long?): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetchRange(KotlinerMeta.KOTLINER_META.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Long): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetch(KotlinerMeta.KOTLINER_META.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Long): link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta? = fetchOne(KotlinerMeta.KOTLINER_META.ID, value)

    /**
     * Fetch records that have <code>meta_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfMetaKey(lowerInclusive: String?, upperInclusive: String?): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetchRange(KotlinerMeta.KOTLINER_META.META_KEY, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>meta_key IN (values)</code>
     */
    fun fetchByMetaKey(vararg values: String): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetch(KotlinerMeta.KOTLINER_META.META_KEY, *values)

    /**
     * Fetch records that have <code>meta_value BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfMetaValue(lowerInclusive: String?, upperInclusive: String?): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetchRange(KotlinerMeta.KOTLINER_META.META_VALUE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>meta_value IN (values)</code>
     */
    fun fetchByMetaValue(vararg values: String): List<link.kotlin.server.jooq.main.tables.pojos.KotlinerMeta> = fetch(KotlinerMeta.KOTLINER_META.META_VALUE, *values)
}
