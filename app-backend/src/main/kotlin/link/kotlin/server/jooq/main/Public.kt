/*
 * This file is generated by jOOQ.
 */
package link.kotlin.server.jooq.main


import kotlin.collections.List

import link.kotlin.server.jooq.main.tables.FlywaySchemaHistory
import link.kotlin.server.jooq.main.tables.Kotliner
import link.kotlin.server.jooq.main.tables.KotlinerMeta

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY: FlywaySchemaHistory get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>public.kotliner</code>.
     */
    val KOTLINER: Kotliner get() = Kotliner.KOTLINER

    /**
     * The table <code>public.kotliner_meta</code>.
     */
    val KOTLINER_META: KotlinerMeta get() = KotlinerMeta.KOTLINER_META

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Kotliner.KOTLINER,
        KotlinerMeta.KOTLINER_META
    )
}
