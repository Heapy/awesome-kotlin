[versions]
asciidoctor = "3.3.2"
commonmark = "0.18.0"
coroutines = "1.5.2"
dokka = "1.5.0"
jackson = "2.12.5"
jooq = "3.15.2"
junit = "5.7.2"
flyway = "7.14.1"
kotlin = "1.5.30"
ktor = "1.6.3"
logback = "1.2.5"
micrometer = "1.7.4"
mockk = "1.12.0"
netty = "4.1.68.Final"
slf4j = "1.7.32"
tomlj = "1.0.0"
vertx = "4.1.3"
undertow = "2.2.10.Final"

[libraries]
bcrypt = { module = "at.favre.lib:bcrypt", version = "0.9.0" }

commonmark = { module = "org.commonmark:commonmark", version.ref = "commonmark" }
commonmark-ext-gfm-tables = { module = "org.commonmark:commonmark-ext-gfm-tables", version.ref = "commonmark" }

config4k = { module = "io.github.config4k:config4k", version = "0.4.2" }

dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }

jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

jooq-core = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }

junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

hikari = { module = "com.zaxxer:HikariCP", version = "5.0.0" }

flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }

jsoup = { module = "org.jsoup:jsoup", version = "1.14.2" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-scripting-common = { module = "org.jetbrains.kotlin:kotlin-scripting-common", version.ref = "kotlin" }
kotlin-scripting-jvm = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm", version.ref = "kotlin" }
kotlin-scripting-jvm-host = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm-host", version.ref = "kotlin" }

ktor-client-jackson = { module = "io.ktor:ktor-client-jackson", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-websockets", version.ref = "ktor" }
ktor-server-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-server-micrometer = { module = "io.ktor:ktor-metrics-micrometer", version.ref = "ktor" }
ktor-server-host = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-locations = { module = "io.ktor:ktor-locations", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-auth-jwt", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

netty-codec-http2 = { module = "io.netty:netty-codec-http2", version.ref = "netty" }
netty-transport-kqueue = { module = "io.netty:netty-transport-native-kqueue", version.ref = "netty" }
netty-transport-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty" }

postgresql = { module = "org.postgresql:postgresql", version = "42.2.23" }

rome = { module = "com.rometools:rome", version = "1.16.0" }

sitemapgen4j = { module = "com.github.dfabulich:sitemapgen4j", version = "1.1.2" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

tomlj = { module = "org.tomlj:tomlj", version.ref = "tomlj" }

vertx-core = { module = "io.vertx:vertx-core", version.ref = "vertx" }

undertow-core = { module = "io.undertow:undertow-core", version.ref = "undertow" }
undertow-ws = { module = "io.undertow:undertow-websockets-jsr", version.ref = "undertow" }

[bundles]
undertow = ["undertow-core", "undertow-ws"]

[plugins]
kt-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kt-serializatin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
asciidoctor-convert = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
asciidoctor-pdf = { id = "org.asciidoctor.jvm.pdf", version.ref = "asciidoctor" }
